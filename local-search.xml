<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>NSFW在线观看与资源搜索</title>
    <link href="/posts/8373160e/"/>
    <url>/posts/8373160e/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>NSFW！注意营养！</p><h2 id="中文在线"><a href="#中文在线" class="headerlink" title="中文在线"></a>中文在线</h2><p><a href="https://jable.tv/">https://jable.tv </a></p><p><a href="https://7mmtv.tv/zh">https://7mmtv.tv/zh </a></p><p><a href="https://www.jav777.xyz/page1.html">https://www.jav777.xyz/page1.html </a></p><p><a href="https://www.xvideos.com/">https://www.xvideos.com</a></p><p><a href="https://www.pornhub.com/">https://www.pornhub.com</a></p><p><a href="https://avgle.com/">https://avgle.com</a></p><p>91论坛：<a href="http://www.91porn.com/">http://www.91porn.com</a></p><p><a href="https://netflav.com/chinese-sub">https://netflav.com/chinese-sub</a></p><p><a href="https://pigav.com/">https://pigav.com </a></p><p>各个国家：<a href="https://xhamster.com/">https://xhamster.com</a></p><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><p><a href="https://www.javbus.com/">https://www.javbus.com</a></p><p><a href="https://javdb.com/">https://javdb.com</a></p><p><a href="http://www.javlibrary.com/cn">http://www.javlibrary.com/cn</a></p><p><a href="https://www.141jav.com/">https://www.141jav.com</a></p><p><a href="http://www.javjunkies.com/">http://www.javjunkies.com</a></p><p><a href="http://btnets.net/">http://btnets.net</a></p><p>草榴：<a href="http://t66y.com/">http://t66y.com</a></p><p>桃花族：<a href="http://thzbt.us/">http://thzbt.us</a></p><p>色花堂：<a href="https://www.sehuatang.net/">https://www.sehuatang.net</a></p><p>油猴脚本:</p><p><a href="https://sleazyfork.org/zh-CN/scripts/25781">https://sleazyfork.org/zh-CN/scripts/25781</a></p><p>开源AV电影管理系统:</p><p><a href="https://github.com/guyueyingmu/avbook">https://github.com/guyueyingmu/avbook</a></p><p>AV网站大全：</p><p><a href="https://theporndude.com/">https://theporndude.com/</a></p>]]></content>
    
    
    <categories>
      
      <category>NSFW</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NSFW</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人使用的Tampermonkey油猴脚本推荐</title>
    <link href="/posts/d7689dcb/"/>
    <url>/posts/d7689dcb/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>「Tampermonkey」油猴可以通过安装各类脚本对网站进行定制。不过它能定制的不仅仅是网站的样式，还能实现更多更强大的功能，只要经过简单设置，下载一些现成脚本，就可以实现上面提到的实用的功能。Tampermonkey 提供了友好的中文化界面，懒得折腾的用户使用默认设置即可，无需更改任何选项。如果需要更多高级设置选项的话，可自行打开「初学者」或者「高级」配置模式，设置将提供动作菜单、更细致的脚本更新、TESLA、加强版编辑器、安全、黑名单检查等高级选项。</p><h2 id="脚本推荐"><a href="#脚本推荐" class="headerlink" title="脚本推荐"></a>脚本推荐</h2><h3 id="百度搜索"><a href="#百度搜索" class="headerlink" title="百度搜索"></a>百度搜索</h3><p><a href="https://greasyfork.org/zh-CN/scripts/14178">AC-baidu-重定向优化百度搜狗谷歌必应搜索_favicon_双列</a></p><p>1.绕过百度、搜狗、谷歌、好搜搜索结果中的自己的跳转链接，直接访问原始网页-反正都能看懂 2.新增自定义网站拦截功能 3添加Favicon显示 4.页面CSS 5.添加计数 6.开关选择以上功能 7.自动翻页功能</p><p>PS：默认相关功能关闭，需要的请手动开启</p><h4 id="脚本效果"><a href="#脚本效果" class="headerlink" title="脚本效果"></a>脚本效果</h4><p><img src="/img/d7689dcb/202109232212454.png" alt="功能设置"></p><h3 id="哔哩哔哩"><a href="#哔哩哔哩" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h3><p><a href="https://github.com/the1812/Bilibili-Evolved#%E5%AE%89%E8%A3%85">Bilibili-Evolved</a><br>强大的哔哩哔哩增强脚本包括功能：下载视频, 音乐, 封面, 弹幕 &#x2F; 简化直播间, 评论区, 首页 &#x2F; 自定义顶栏, 删除广告, 夜间模式 &#x2F; 触屏设备支持</p><h4 id="脚本效果-1"><a href="#脚本效果-1" class="headerlink" title="脚本效果"></a>脚本效果</h4><p><img src="/img/d7689dcb/202109232217321.png" alt="清爽首页模式"></p><h3 id="微博"><a href="#微博" class="headerlink" title="微博"></a>微博</h3><p><a href="https://tiansh.github.io/yawf/">YAWF 药方</a></p><p>新浪微博根据关键词、作者、话题、来源等过滤微博，清理版面，以及其他改造功能</p><ul><li>跳过微博的兴趣导引，避免误关注大量“垃圾帐号”（该功能默认开启，无设置项）；</li><li>根据关键字、作者、来源等隐藏、折叠或高亮微博；使用拖拽轻松定义过滤规则；</li><li>屏蔽推广、粉丝头条、投票、好友赞过、抢红包、爱问医生等各种微博；</li><li>清理版面上的各种模块、图标、小红点，去广告；过滤热门话题；</li><li>合并左右边栏的双栏模式，加宽微博宽度和加大微博字号，自定义字体；</li><li>去除微博间的空白，调整微博版式，重新安排微博下方按钮顺序</li><li>自动检查您的关注列表并告诉您发生的变化，帮您保持关注列表的干净整洁；</li><li>设置网页模板，自定义半透明背景色，深色导航栏，经典导航栏布局；</li><li>正常大小的微博缩略图尺寸，原生视频播放器；</li><li>以及更多功能……</li></ul><h4 id="脚本效果-2"><a href="#脚本效果-2" class="headerlink" title="脚本效果"></a>脚本效果</h4><p><img src="/img/d7689dcb/202109232219779.png" alt="脚本设置"></p><h3 id="CSDN"><a href="#CSDN" class="headerlink" title="CSDN"></a>CSDN</h3><p><a href="https://greasyfork.org/zh-CN/scripts/378351">持续更新-csdn广告完全过滤-人性化脚本优化-不用再登录了-让你体验令人惊喜的崭新csdn</a></p><p>CSDNGreener，一款专为 Tampermonkey 插件打造的 CSDN 绿化脚本。</p><h4 id="脚本效果-3"><a href="#脚本效果-3" class="headerlink" title="脚本效果"></a>脚本效果</h4><p><img src="/img/d7689dcb/202109232221417.png" alt="文章阅读页面"></p><h3 id="知乎"><a href="#知乎" class="headerlink" title="知乎"></a>知乎</h3><p><a href="https://greasyfork.org/zh-CN/scripts/419081">知乎增强</a></p><p>移除登录弹窗、默认收起回答、一键收起回答、收起当前回答&#x2F;评论（点击两侧空白处）、快捷回到顶部（右键两侧空白处）、屏蔽用户 (发布的内容)、屏蔽关键词（标题&#x2F;评论）、屏蔽首页视频（视频&#x2F;文章等类别）、屏蔽盐选内容、净化标题消息、展开问题描述、置顶显示时间、完整问题时间、区分问题文章、直达问题按钮、默认高清原图、默认站外直链</p><h4 id="脚本效果-4"><a href="#脚本效果-4" class="headerlink" title="脚本效果"></a>脚本效果</h4><p><img src="/img/d7689dcb/202110012221342.png" alt="脚本效果"></p><h3 id="E-站"><a href="#E-站" class="headerlink" title="E 站"></a>E 站</h3><p><a href="https://github.com/EhTagTranslation/EhSyringe/releases/latest/download/ehsyringe.user.js">EhSyringe</a></p><p>E 站注射器，将中文翻译注入到 E 站体内。（中文化）</p><p>功能包括 全站翻译（大部分)、TAG 翻译、TAG 介绍、TAG 翻译数据更新、搜索框 TAG 输入提示</p><p><a href="https://openuserjs.org/scripts/alexchen/eHunter">eHunter</a></p><p>为e-hentai&#x2F;exhentai&#x2F;nhentai提供一个滚动模式和书本模式, 提供良好的阅读体验。</p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>Tampermonkey</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows常用软件</title>
    <link href="/posts/35390aee/"/>
    <url>/posts/35390aee/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>要说 Windows 平台有哪些值得推荐的常用软件，我整理了一些自己用后感觉还不错的软件，全文共有八大类，包括：<strong>多媒体类、浏览器类、图形图像类、聊天软件类、办公软件类 、系统必备类、常用工具类、博客相关类</strong> 。</p><h2 id="多媒体"><a href="#多媒体" class="headerlink" title="多媒体"></a>多媒体</h2><ul><li><p>PotPlayer:</p><p>视频播放</p><p>官网:<a href="https://potplayer.daum.net/">https://potplayer.daum.net/</a></p><p>下载地址:<a href="https://pan.lanzoui.com/b0f1k59qh">https://pan.lanzoui.com/b0f1k59qh</a></p></li><li><p>foobar2000:</p><p>音乐播放</p><p>官网:<a href="https://www.foobar2000.org/">https://www.foobar2000.org/</a></p><p>下载地址:<a href="http://blog.sina.com.cn/go2spa">http://blog.sina.com.cn/go2spa</a></p></li></ul><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><ul><li><p>Google Chrome:</p><p>官网:<a href="https://www.google.com/chrome/">https://www.google.com/chrome/</a></p></li><li><p>Microsoft Edge:</p><p>官网:<a href="https://www.microsoft.com/zh-cn/edge">https://www.microsoft.com/zh-cn/edge</a></p></li><li><p>Cent Browser:</p><p>个人常用</p><p>官网:<a href="https://www.centbrowser.cn/">https://www.centbrowser.cn/</a></p></li></ul><h2 id="图形图像"><a href="#图形图像" class="headerlink" title="图形图像"></a>图形图像</h2><ul><li><p>2345看图王:</p><p>附带PDF查看器</p><p>官网:<a href="https://pic.2345.cc/">https://pic.2345.cc/</a></p><p>下载地址:<a href="https://pan.lanzoui.com/iUuJ1oeuo6d">https://pan.lanzoui.com/iUuJ1oeuo6d</a></p></li><li><p>WinSnap:</p><p>截图软件</p><p>官网:<a href="https://www.ntwind.com/software/winsnap.html">https://www.ntwind.com/software/winsnap.html</a></p></li></ul><h2 id="聊天软件"><a href="#聊天软件" class="headerlink" title="聊天软件"></a>聊天软件</h2><ul><li><p>微信:</p><p>官网:<a href="https://weixin.qq.com/">https://weixin.qq.com/</a></p><p>下载地址:<a href="https://pc.weixin.qq.com/">https://pc.weixin.qq.com/</a></p></li><li><p>QQ:</p><p>官网:<a href="https://im.qq.com/index">https://im.qq.com/index</a></p><p>下载地址:<a href="https://im.qq.com/download">https://im.qq.com/download</a></p></li><li><p>Tim:</p><p>官网:<a href="https://office.qq.com/">https://office.qq.com/</a></p><p>下载地址:<a href="https://office.qq.com/download.html">https://office.qq.com/download.html</a></p></li><li><p>YY语音:</p><p>官网:<a href="https://www.yy.com/web/pcyy_download/">https://www.yy.com/web/pcyy_download/</a></p><p>下载地址:<a href="https://pan.lanzoui.com/ieLQmrqbv9e">https://pan.lanzoui.com/ieLQmrqbv9e</a></p></li><li><p>Telegram:</p><p>官网:<a href="https://telegram.org/">https://telegram.org/</a></p><p>下载地址:<a href="https://desktop.telegram.org/">https://desktop.telegram.org/</a></p></li></ul><h2 id="办公软件"><a href="#办公软件" class="headerlink" title="办公软件"></a>办公软件</h2><ul><li><p>Microsoft Office:</p><p>官网:<a href="https://www.office.com/">https://www.office.com/</a></p><p>下载地址:<a href="https://otp.landian.vip/zh-cn/download.html">https://otp.landian.vip/zh-cn/download.html</a></p></li><li><p>WPS Office:</p><p>官网:<a href="https://www.wps.cn/">https://www.wps.cn/</a></p><ul><li><p>WPS Office 2019:</p><p>WPS软件政府专用（2019版）石家庄市人力资源和社会保障局：<a href="http://rsj.sjz.gov.cn/col/1515395624617/2019/06/10/1560135309935.html">官方下载</a></p><p>WPS Office 2019 海南省直属机关单位专用（11.8.2.8875）：[官方下载](<a href="http://wpspro.support.wps.cn/gov/hainan/installation/WPS">http://wpspro.support.wps.cn/gov/hainan/installation/WPS</a> Office 2019 海南省直属机关单位专用（11.8.2.8875）.exe)</p><p>WPS Office 2019 专业版（潮州市党政机关单位）（11.8.2.8411）：<a href="http://wpspro.support.wps.cn/gov/guangdong/chaozhou/">官方下载</a> 密码：265980</p></li><li><p>WPS Office 2016:</p><p>WPS Office 2016 云南省直属党政机关专用版：<a href="https://pan.baidu.com/s/1xDYRAD6vl911OtxFNDoBQw">https://pan.baidu.com/s/1xDYRAD6vl911OtxFNDoBQw</a> 密码：9bt3</p></li></ul></li></ul><h2 id="系统必备"><a href="#系统必备" class="headerlink" title="系统必备"></a>系统必备</h2><ul><li><p>Dism++:</p><p>系统优化软件</p><p>官网:<a href="http://www.chuyu.me/zh-Hans/">http://www.chuyu.me/zh-Hans/</a></p></li><li><p>Bandizip:</p><p>解压软件</p><p>官网:<a href="http://www.bandisoft.com/bandizip/">http://www.bandisoft.com/bandizip/</a></p></li><li><p>火绒:</p><p>系统安全软件</p><p>官网:<a href="https://www.huorong.cn/">https://www.huorong.cn/</a></p></li><li><p>Deep Freeze:</p><p>系统还原软件</p><p>官网:<a href="https://www.faronics.com/en-uk/products/deep-freeze/standard">https://www.faronics.com/en-uk/products/deep-freeze/standard</a></p></li><li><p>Everything:</p><p>本地文件搜索</p><p>官网:<a href="https://www.voidtools.com/zh-cn/">https://www.voidtools.com/zh-cn/</a></p></li></ul><h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><ul><li><p>Bandicam:</p><p>录屏软件</p><p>官网:<a href="https://www.bandicam.cn/">https://www.bandicam.cn/</a></p><p>下载地址:<a href="https://pan.lanzoui.com/b0f197pud">https://pan.lanzoui.com/b0f197pud</a></p></li><li><p>Clash:</p><p>不可描述</p><p>官网:<a href="https://github.com/Fndroid/clash_for_windows_pkg">https://github.com/Fndroid/clash_for_windows_pkg</a></p><p>下载地址:<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">https://github.com/Fndroid/clash_for_windows_pkg/releases</a></p></li><li><p>FFRenamePro:</p><p>批量改名</p><p>官网:<a href="http://www.ffhome.com/">http://www.ffhome.com/</a></p><p>下载地址:<a href="http://www.ffhome.com/works/1406.html">http://www.ffhome.com/works/1406.html</a></p></li><li><p>HiBitUninstaller:</p><p>软件卸载</p><p>官网:<a href="https://hibitsoft.ir/Uninstaller.html">https://hibitsoft.ir/Uninstaller.html</a></p><p>下载地址:<a href="https://hibitsoft.ir/Uninstaller.html">https://hibitsoft.ir/Uninstaller.html</a></p></li><li><p>KeePass:</p><p>密码管理</p><p>官网:<a href="https://keepass.info/">https://keepass.info/</a></p><p>下载地址:<a href="https://keepass.info/download.html">https://keepass.info/download.html</a></p></li><li><p>MyHash:</p><p>文件校验</p><p>官网:<a href="https://github.com/drag0n-app/MyHash">https://github.com/drag0n-app/MyHash</a></p></li><li><p>Netch:</p><p>游戏加速</p><p>官网:<a href="https://github.com/netchx/Netch">https://github.com/netchx/Netch</a></p><p>下载地址:<a href="https://github.com/netchx/netch/releases">https://github.com/netchx/netch/releases</a></p></li><li><p>SumatraPDF:</p><p>PDF查看</p><p>官网:<a href="https://www.sumatrapdfreader.org/free-pdf-reader">https://www.sumatrapdfreader.org/free-pdf-reader</a></p><p>下载地址:<a href="https://www.sumatrapdfreader.org/download-free-pdf-viewer">https://www.sumatrapdfreader.org/download-free-pdf-viewer</a></p></li><li><p>WinSCP:</p><p>ssh链接</p><p>官网:<a href="https://winscp.net/eng/index.php">https://winscp.net/eng/index.php</a></p><p>下载地址:<a href="https://winscp.net/eng/download.php">https://winscp.net/eng/download.php</a></p></li></ul><h2 id="博客相关"><a href="#博客相关" class="headerlink" title="博客相关"></a>博客相关</h2><ul><li><p>typora:</p><p>博客撰写</p><p>官网:<a href="https://typora.io/">https://typora.io/</a></p><p>下载地址:<a href="https://typora.io/#windows">https://typora.io/#windows</a></p></li><li><p>PicGo:</p><p>官网:<a href="https://picgo.github.io/PicGo-Doc/">https://picgo.github.io/PicGo-Doc/</a></p><p>下载地址:<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p></li><li><p>GitHubDesktop:</p><p>官网:<a href="https://desktop.github.com/">https://desktop.github.com/</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一句命令激活Windows</title>
    <link href="/posts/22c45a8c/"/>
    <url>/posts/22c45a8c/</url>
    
    <content type="html"><![CDATA[<h2 id="项目说明"><a href="#项目说明" class="headerlink" title="项目说明"></a>项目说明</h2><p>服务作用：在线激活windows和office</p><p>适用对象：VOL版本的windows和office</p><p>优点：在线激活 省时省力 无需安装软件 干净环保 命令简单</p><p>缺点：服务器不挂的话自动重新授权到服务器</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>一般来说，只要确保的下载的是VL批量版本并且没有手动安装过任何key，你只需要使用管理员权限运行cmd执行一句命令就足够：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">slmgr /skms kms.03k.org<br></code></pre></td></tr></table></figure><p>这句命令的意思是，设置kms服务器地址（set kms），设置成功如下：</p><p><img src="/img/22c45a8c/202108291745040.png" alt="kms"></p><p>然后去计算机属性或者控制面板其他的什么的地方点一下激活就好了。</p><p>当然，如果你懒得点，可以多打一句命令手动激活：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">slmgr /ato<br></code></pre></td></tr></table></figure><p><img src="/img/22c45a8c/202108291746696.png" alt="slmgr-ato"></p><p>这句命令的意思是，马上对当前设置的key和服务器地址等进行尝试激活操作。</p><h2 id="KMS-地址列表"><a href="#KMS-地址列表" class="headerlink" title="KMS 地址列表"></a>KMS 地址列表</h2><p><a href="https://www.coolhub.top/tech-articles/kms_list.html">kms_list</a></p><p>列表数据半小时更新一次，点击表头可以进行排序。建议使用成功率高且延迟低的 KMS 主机进行激活。<br>成功率指成功次数&#x2F;测试次数，最短、最长、平均时间以及近期成功率均取最近 10 次测试结果计算。<br>数据仅供参考，实际使用情况会受网络因素影响而不同。</p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>KMS</tag>
      
      <tag>激活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AHK实现DD驱动按键连发</title>
    <link href="/posts/973246e2/"/>
    <url>/posts/973246e2/</url>
    
    <content type="html"><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://www.autohotkey.com/">AutoHotkey</a></p><p>Powerful. Easy to learn.The ultimate automation scripting language for Windows.</p><p>强大的。简单易学。适用于 Windows 的终极自动化脚本语言。</p><h2 id="按键功能"><a href="#按键功能" class="headerlink" title="按键功能"></a>按键功能</h2><p>按压式连发：按下x键开启，松开x键关闭</p><p>循环连发：F4开启，F5关闭</p><p>按键暂停：F12</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><figure class="highlight ahk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs AHK"><span class="hljs-meta">#Include, Class_DD.ahk</span><br><span class="hljs-meta">#MaxHotkeysPerInterval 1000</span><br><br><span class="hljs-title">~F4::</span><br>&#123;<br><span class="hljs-built_in">SetTimer,</span> Key01, <span class="hljs-number">20</span><br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-title">Key01:</span><br>dd.key(<span class="hljs-number">502</span>, <span class="hljs-number">1</span>)<br>dd.key(<span class="hljs-number">502</span>, <span class="hljs-number">2</span>)<br><span class="hljs-keyword">return</span><br><br><span class="hljs-title">~F5::</span><br>&#123;<br><span class="hljs-built_in">SetTimer,</span> Key01, Off<br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-title">~x::</span><br>&#123;<br><span class="hljs-built_in">SetTimer,</span> Key02, <span class="hljs-number">20</span><br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-title">Key02:</span><br>dd.key(<span class="hljs-number">502</span>, <span class="hljs-number">1</span>)<br>dd.key(<span class="hljs-number">502</span>, <span class="hljs-number">2</span>)<br><span class="hljs-keyword">return</span><br><br><span class="hljs-title">~x UP::</span><br>&#123;<br><span class="hljs-built_in">SetTimer,</span> Key02, Off<br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-title">$F12::</span><span class="hljs-keyword">suspend</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>AHK</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AHK</tag>
      
      <tag>DD</tag>
      
      <tag>按键连发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于群晖优化可以用的一键命令</title>
    <link href="/posts/b86f5b0a/"/>
    <url>/posts/b86f5b0a/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关于群晖优化可以用的一键命令，适用于DSM6.1X和6.2X。</p><h2 id="命令内容"><a href="#命令内容" class="headerlink" title="命令内容"></a>命令内容</h2><ul><li>一键开启DSM6.1X的root权限，命令行最后面的123456是设置root的密码，可以自己修改再运行，重启后生效。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">synouser --setpw root 123456<br></code></pre></td></tr></table></figure><ul><li>一键开启DSM6.2X的root权限，命令行最后面的123456是设置root的密码，可以自己修改再运行，重启后生效。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod 755 /etc/ssh/sshd_config &amp;&amp; sed -i &#x27;s/#PermitRootLogin prohibit-password/PermitRootLogin yes/g&#x27; /etc/ssh/sshd_config &amp;&amp; synouser --setpw root 123456<br></code></pre></td></tr></table></figure><ul><li>一键屏蔽升级（仅限DSM6.22以之前的版本，不包括DSM6.23及以上版本），运行后生效。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &quot;127.0.0.1 update.synology.com&quot; &gt; /etc/hosts<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Nas</category>
      
      <category>Synology</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Nas</tag>
      
      <tag>群晖</tag>
      
      <tag>Synology</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于STM32的家庭气象站</title>
    <link href="/posts/c4f182e1/"/>
    <url>/posts/c4f182e1/</url>
    
    <content type="html"><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/Maskbugzero/ESP8266-Weather-2021">Maskbugzero&#x2F;ESP8266-Weather-2021</a></p><p>一个关于STM32+ESP8266+DHT11的家庭气象站。</p><h2 id="硬件资源"><a href="#硬件资源" class="headerlink" title="硬件资源"></a>硬件资源</h2><ol><li>战舰V3\精英STM32F103开发板</li><li>ALIENTEK 2.8&#x2F;3.5&#x2F;4.3&#x2F;7寸TFTLCD模块(通过FSMC驱动.FSMC_NE4接LCD片选&#x2F;A10接RS)</li><li>按键KEY0(PE4)&#x2F;KEY1(PE3)&#x2F;KEY_UP(PA0.也称之为WK_UP)</li><li>ESP8266-12S WIFI模块1个</li><li>DHT11模块1个</li></ol><h2 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h2><ol><li>微信小程序配网</li><li>室内温湿度测量及显示</li><li>室外天气数据获取及显示</li><li>时间显示及网络校准</li></ol><h2 id="连接方式"><a href="#连接方式" class="headerlink" title="连接方式"></a>连接方式</h2><ul><li>模块与带有无线网卡的电脑或其他wifi设备连接：采用wifi连接</li><li>模块与开发板连接：TTL串口方式</li></ul><h3 id="ATK-ESP8266-WIFI模块与精英板连接方式"><a href="#ATK-ESP8266-WIFI模块与精英板连接方式" class="headerlink" title="ATK-ESP8266 WIFI模块与精英板连接方式"></a>ATK-ESP8266 WIFI模块与精英板连接方式</h3><p>TXD&lt;————&gt;PB11</p><p>RXD&lt;————&gt;PB10</p><p>GND&lt;————&gt;GND</p><p>VCC&lt;————&gt;3.3V\5V</p><h3 id="DHT11模块与精英板连接方式"><a href="#DHT11模块与精英板连接方式" class="headerlink" title="DHT11模块与精英板连接方式"></a>DHT11模块与精英板连接方式</h3><p>Data&lt;————&gt;PE11</p><h2 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h2><h3 id="外设初始化"><a href="#外设初始化" class="headerlink" title="外设初始化"></a>外设初始化</h3><p>初始化外设时，若DHT11工作不正常则显示屏无法正常显示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c">LED_Init();  <span class="hljs-comment">//初始化与LED连接的硬件接口</span><br>KEY_Init();<span class="hljs-comment">//初始化按键</span><br>LCD_Init();   <span class="hljs-comment">//初始化LCD   </span><br>RTC_Init();<br><span class="hljs-keyword">while</span>(DHT11_Init())<span class="hljs-comment">//DHT11初始化</span><br>&#123;<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;DHT11 出错！\r\n&quot;</span>);<br>delay_ms(<span class="hljs-number">200</span>);<br>&#125;<br>W25QXX_Init();<span class="hljs-comment">//初始化W25Q128</span><br>tp_dev.init();<span class="hljs-comment">//初始化触摸屏</span><br>usart3_init(<span class="hljs-number">115200</span>);<span class="hljs-comment">//初始化串口3 </span><br>my_mem_init(SRAMIN);<span class="hljs-comment">//初始化内部内存池</span><br>exfuns_init();<span class="hljs-comment">//为fatfs相关变量申请内存  </span><br>f_mount(fs[<span class="hljs-number">0</span>],<span class="hljs-string">&quot;0:&quot;</span>,<span class="hljs-number">1</span>); <span class="hljs-comment">//挂载SD卡 </span><br>f_mount(fs[<span class="hljs-number">1</span>],<span class="hljs-string">&quot;1:&quot;</span>,<span class="hljs-number">1</span>); <span class="hljs-comment">//挂载FLASH.</span><br></code></pre></td></tr></table></figure><h3 id="微信小程序配网"><a href="#微信小程序配网" class="headerlink" title="微信小程序配网"></a>微信小程序配网</h3><p><img src="/img/c4f182e1/RFhd54.png" alt="微信小程序配网"></p><p>源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//一键配网设置</span><br>u8 <span class="hljs-title function_">atk_8266_wifi_config</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-type">int</span> i;<br><br><span class="hljs-keyword">while</span>(atk_8266_send_cmd(<span class="hljs-string">&quot;AT&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">20</span>))<span class="hljs-comment">//检查WIFI模块是否在线</span><br>&#123;<br>atk_8266_quit_trans();<span class="hljs-comment">//退出透传</span><br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CIPMODE=0&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">200</span>);  <span class="hljs-comment">//关闭透传模式</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;未检测到模块!!!&quot;</span>);<br>delay_ms(<span class="hljs-number">800</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;尝试连接模块...&quot;</span>); <br>&#125; <br>u3_printf(<span class="hljs-string">&quot;AT+RESTORE&quot;</span>);<span class="hljs-comment">//恢复出厂设置</span><br>delay_ms(<span class="hljs-number">1000</span>);      <span class="hljs-comment">//延时3S等待恢复成功</span><br>delay_ms(<span class="hljs-number">1000</span>);<br>delay_ms(<span class="hljs-number">1000</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恢复出厂设置完成&quot;</span>); <br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+RST&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">20</span>);<span class="hljs-comment">//软重启</span><br>delay_ms(<span class="hljs-number">1000</span>);         <span class="hljs-comment">//延时3S等待重启成功</span><br>delay_ms(<span class="hljs-number">1000</span>);<br>delay_ms(<span class="hljs-number">1000</span>);<br>delay_ms(<span class="hljs-number">1000</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;软重启完成&quot;</span>);<br><span class="hljs-keyword">while</span>(atk_8266_send_cmd(<span class="hljs-string">&quot;ATE0&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">20</span>));<span class="hljs-comment">//关闭回显</span><br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CWMODE=1&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">50</span>);<span class="hljs-comment">//设置WIFI STA模式</span><br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CWAUTOCONN=1&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">20</span>);   <span class="hljs-comment">//使能上电自动连接AP</span><br>delay_ms(<span class="hljs-number">300</span>);<br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CWSTARTSMART=3&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">20</span>);<span class="hljs-comment">//支持ESP-Touch和Airkiss智能配网</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;智能配网已开启  等待30s\r\n&quot;</span>);<br><span class="hljs-keyword">while</span>(i&lt;=<span class="hljs-number">30</span>)<br>&#123;<br>delay_ms(<span class="hljs-number">1000</span>);     <span class="hljs-comment">//延时30S等待配网成功</span><br>i++;<br>&#125;<br><span class="hljs-comment">//while(atk_8266_check_cmd(&quot;smartconfig connected wifi&quot;));//连接目标路由器,并且获得IP</span><br><span class="hljs-comment">//delay_ms(300);</span><br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CWSTOPSMART&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">20</span>);<span class="hljs-comment">//释放快连所占的内存</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="数据解析"><a href="#数据解析" class="headerlink" title="数据解析"></a>数据解析</h3><p><img src="/img/c4f182e1/RFh18s.png" alt="数据解析流程图"></p><h4 id="天气数据"><a href="#天气数据" class="headerlink" title="天气数据"></a>天气数据</h4><p>源码：（以当天天气数据为例，近3天天气数据类似)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//解析当前天气</span><br>u8 <span class="hljs-title function_">parse_now_weather</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>cJSON *root;<br>cJSON *pSub;<br>cJSON *arrayItem;<br>cJSON *pItem;<br>cJSON *pSubItem;<br>cJSON *pChildItem;<br><br><span class="hljs-type">char</span> *pr,*utf8str,*gbkstr;<br>u8 size = <span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> len;<br>u8 res;<br>u8 temperature;<br><br>root = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(cJSON));<br>pSub = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(cJSON));<br>pItem = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(cJSON));<br>pSubItem = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(cJSON));<br>pChildItem = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(cJSON));<br>arrayItem = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(cJSON));<br><br>pr = mymalloc(SRAMIN,<span class="hljs-number">1000</span>);<br>utf8str = mymalloc(SRAMIN,<span class="hljs-number">50</span>);<br>gbkstr = mymalloc(SRAMIN,<span class="hljs-number">50</span>);<br><br><span class="hljs-built_in">memset</span>(pr,<span class="hljs-number">0</span>,<span class="hljs-number">1000</span>);<br><span class="hljs-built_in">memset</span>(gbkstr,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>);<br><span class="hljs-built_in">memset</span>(utf8str,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>);<br><br>file = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(FIL));<br>res=f_open(file,(<span class="hljs-type">const</span> TCHAR*)APP_ASCII_5427,FA_READ);<span class="hljs-comment">//打开文件</span><br><span class="hljs-keyword">if</span>(res==FR_OK)<br>&#123;<br>asc2_5427 = mymalloc(SRAMIN,file-&gt;fsize);<br><span class="hljs-keyword">if</span>(asc2_5427 != <span class="hljs-literal">NULL</span>)<br>&#123;<br>res = f_read(file,asc2_5427,file-&gt;fsize,&amp;br);<br>&#125;<br>f_close(file);<br>&#125;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;jieshou-&gt;1dayjson = %s\r\n&quot;</span>,USART3_RX_BUF);<br><br>root = cJSON_Parse((<span class="hljs-type">const</span> <span class="hljs-type">char</span>*)USART3_RX_BUF);<br><span class="hljs-keyword">if</span>(root != <span class="hljs-literal">NULL</span>)<br>&#123;<br>pSub = cJSON_GetObjectItem(root,<span class="hljs-string">&quot;results&quot;</span>);<br><span class="hljs-keyword">if</span>(pSub != <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-comment">//size = cJSON_GetArraySize(pSub);</span><br>arrayItem = cJSON_GetArrayItem(pSub,<span class="hljs-number">0</span>);  <br>pr = cJSON_Print(arrayItem);   <span class="hljs-comment">//获取jsom数组</span><br>pItem = cJSON_Parse(pr);       <span class="hljs-comment">//对数组，进行升级。</span><br><span class="hljs-keyword">if</span>(pItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>pSubItem = cJSON_GetObjectItem(pItem,<span class="hljs-string">&quot;location&quot;</span>);<br><span class="hljs-keyword">if</span>(pSubItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>pChildItem = cJSON_GetObjectItem(pSubItem,<span class="hljs-string">&quot;name&quot;</span>);<br><span class="hljs-keyword">if</span>(pChildItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>utf8str = pChildItem-&gt;valuestring;<br>SwitchToGbk((<span class="hljs-type">const</span> u8*)utf8str,<span class="hljs-built_in">strlen</span>(utf8str),(u8 *)gbkstr,&amp;len);  <span class="hljs-comment">//获取城市名称转换为gbk文件</span><br>Show_Str(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,lcddev.width,lcddev.height,(u8 *)gbkstr,<span class="hljs-number">16</span>,<span class="hljs-number">0</span>);         <span class="hljs-comment">//显示城市名称。</span><br>&#125;<br>&#125;<br><br><span class="hljs-built_in">memset</span>(utf8str,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>); <span class="hljs-comment">//解决阴华</span><br><span class="hljs-built_in">memset</span>(gbkstr,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>);<br><br>pSubItem = cJSON_GetObjectItem(pItem,<span class="hljs-string">&quot;now&quot;</span>);<br><span class="hljs-keyword">if</span>(pSubItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>pChildItem = cJSON_GetObjectItem(pSubItem,<span class="hljs-string">&quot;text&quot;</span>);  <span class="hljs-comment">//获取天气信息。多云</span><br><span class="hljs-keyword">if</span>(pChildItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>utf8str = pChildItem-&gt;valuestring;<br>SwitchToGbk((<span class="hljs-type">const</span> u8*)utf8str,<span class="hljs-built_in">strlen</span>(utf8str),(u8 *)gbkstr,&amp;len);<br>Show_Str(<span class="hljs-number">220</span>,<span class="hljs-number">25</span>,lcddev.width,lcddev.height,(u8 *)gbkstr,<span class="hljs-number">16</span>,<span class="hljs-number">0</span>);  <span class="hljs-comment">//显示多云</span><br>&#125;<br><span class="hljs-built_in">memset</span>(utf8str,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>);<br><span class="hljs-built_in">memset</span>(gbkstr,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>);<br><br>pChildItem = cJSON_GetObjectItem(pSubItem,<span class="hljs-string">&quot;code&quot;</span>);              <span class="hljs-comment">//获取气象代码</span><br><span class="hljs-keyword">if</span>(pChildItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>gbkstr = pChildItem-&gt;valuestring;<br>show_weather_icon((u8 *)gbkstr,<span class="hljs-number">0</span>);                           <span class="hljs-comment">//根据气象代码，更新图片</span><br>&#125;<br><span class="hljs-built_in">memset</span>(gbkstr,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>);<br><br>pChildItem = cJSON_GetObjectItem(pSubItem,<span class="hljs-string">&quot;temperature&quot;</span>);     <span class="hljs-comment">//获取温度信息</span><br><span class="hljs-keyword">if</span>(pChildItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>gbkstr = pChildItem-&gt;valuestring;<br>temperature = str2int((u8 *)gbkstr);<br>gui_show_num(<span class="hljs-number">140</span>,<span class="hljs-number">22</span>,<span class="hljs-number">2</span>,RED,<span class="hljs-number">54</span>,temperature,<span class="hljs-number">0x80</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;wendu = %d\r\n&quot;</span>,temperature);<br>&#125;<br>&#125;<br><br>pSubItem = cJSON_GetObjectItem(pItem,<span class="hljs-string">&quot;last_update&quot;</span>);<br><span class="hljs-keyword">if</span>(pSubItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>    gbkstr =pSubItem-&gt;valuestring;<br><br> LCD_ShowString(<span class="hljs-number">0</span>,<span class="hljs-number">92</span>,<span class="hljs-number">200</span>,<span class="hljs-number">20</span>,<span class="hljs-number">12</span>,(u8*)gbkstr);<br> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1day_updata_time = %s\r\n&quot;</span>,(u8*)gbkstr);<br>&#125;<br><br><br>&#125;<br>cJSON_Delete(pItem);<br>&#125;<br>&#125;<br>cJSON_Delete(root);<br>myfree(SRAMIN,root);<br>myfree(SRAMIN,pSub);<br>myfree(SRAMIN,pItem);<br>myfree(SRAMIN,pSubItem);<br>myfree(SRAMIN,pChildItem);<br>myfree(SRAMIN,arrayItem);<br>myfree(SRAMIN,pr);<br>myfree(SRAMIN,utf8str);<br>myfree(SRAMIN,gbkstr);<br>myfree(SRAMIN,file);<br>myfree(SRAMIN,asc2_5427);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="时间数据获取和校准"><a href="#时间数据获取和校准" class="headerlink" title="时间数据获取和校准"></a>时间数据获取和校准</h4><p>源码:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs c">u8 <span class="hljs-title function_">get_beijing_time</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>u8 *p;<br>u8 res;<br><br>u8 *resp;<br>u8 *p_end;<br><br><span class="hljs-comment">//u8 ipbuf[16]; //IP缓存</span><br>p=mymalloc(SRAMIN,<span class="hljs-number">40</span>);<span class="hljs-comment">//申请40字节内存</span><br><span class="hljs-built_in">sprintf</span>((<span class="hljs-type">char</span>*)p,<span class="hljs-string">&quot;AT+CIPSTART=\&quot;TCP\&quot;,\&quot;%s\&quot;,%s&quot;</span>,TIME_SERVERIP,TIME_PORTNUM);    <span class="hljs-comment">//配置目标TCP服务器</span><br>res = atk_8266_send_cmd(p,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">200</span>);<span class="hljs-comment">//连接到目标TCP服务器</span><br><span class="hljs-keyword">if</span>(res==<span class="hljs-number">1</span>)<br>&#123;<br>myfree(SRAMIN,p);<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br>delay_ms(<span class="hljs-number">300</span>);<br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CIPMODE=1&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">100</span>);      <span class="hljs-comment">//传输模式为：透传</span><br><span class="hljs-comment">//atk_8266_get_wanip(ipbuf);//获取WAN IP</span><br><br>USART3_RX_STA=<span class="hljs-number">0</span>;<br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CIPSEND&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">100</span>);         <span class="hljs-comment">//开始透传</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;start trans...\r\n&quot;</span>);<br>u3_printf(<span class="hljs-string">&quot;GET http://api.k780.com/?app=life.time&amp;appkey=58173&amp;sign=4e67ab8533b30580e584c8b9f0a6cc50&amp;format=json\n\n&quot;</span>);<br>delay_ms(<span class="hljs-number">20</span>);<span class="hljs-comment">//延时20ms返回的是指令发送成功的状态</span><br><span class="hljs-comment">//atk_8266_at_response(1);</span><br>USART3_RX_STA=<span class="hljs-number">0</span>;<span class="hljs-comment">//清零串口3数据</span><br>delay_ms(<span class="hljs-number">1000</span>);<br><span class="hljs-comment">//atk_8266_at_response(0);</span><br><span class="hljs-keyword">if</span>(USART3_RX_STA&amp;<span class="hljs-number">0X8000</span>)<span class="hljs-comment">//此时再次接到一次数据，为时间的数据</span><br>&#123; <br>USART3_RX_BUF[USART3_RX_STA&amp;<span class="hljs-number">0X7FFF</span>]=<span class="hljs-number">0</span>;<span class="hljs-comment">//添加结束符</span><br>&#125; <br><br>             resp=<span class="hljs-string">&quot;datetime_2&quot;</span>;<br>             p_end = (u8*)<span class="hljs-built_in">strstr</span>((<span class="hljs-type">char</span>*)USART3_RX_BUF,(<span class="hljs-type">char</span>*)resp);<br> p = p_end<span class="hljs-number">-11</span>; <span class="hljs-comment">//确定串口数据中时间的起止位，如&quot;datetime_1&quot;:&quot;2021-03-31 20:09:07&quot;,&quot;datetime_2&quot;:&quot;2021 中</span><br><br>   nwt.hour = ((*p - <span class="hljs-number">0x30</span>)*<span class="hljs-number">10</span> + (*(p+<span class="hljs-number">1</span>) - <span class="hljs-number">0x30</span>));      <br>   nwt.min = ((*(p+<span class="hljs-number">3</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">10</span> + (*(p+<span class="hljs-number">4</span>) - <span class="hljs-number">0x30</span>));<br>   nwt.sec = ((*(p+<span class="hljs-number">6</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">10</span> + (*(p+<span class="hljs-number">7</span>) - <span class="hljs-number">0x30</span>));<br><br>   nwt.year = ((*(p<span class="hljs-number">-11</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">1000</span> + (*(p<span class="hljs-number">-10</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">100</span>+ (*(p<span class="hljs-number">-9</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">10</span>+ (*(p<span class="hljs-number">-8</span>) - <span class="hljs-number">0x30</span>)); <br>   nwt.month = ((*(p<span class="hljs-number">-6</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">10</span> + (*(p<span class="hljs-number">-5</span>) - <span class="hljs-number">0x30</span>));<br>   nwt.date = ((*(p<span class="hljs-number">-3</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">10</span> + (*(p<span class="hljs-number">-2</span>) - <span class="hljs-number">0x30</span>));<br><span class="hljs-comment">//使用指针方法获取时分秒年月日 </span><br>   RTC_Set(nwt.year,nwt.month ,nwt.date ,nwt.hour ,nwt.min,nwt.sec); <span class="hljs-comment">//使用RTC函数设置时间  </span><br><br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;nwt.year = %d\r\n&quot;</span>,nwt.year);<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;nwt.month = %d\r\n&quot;</span>,nwt.month);<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;nwt.date = %d\r\n&quot;</span>,nwt.date);<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;nwt.hour = %d\r\n&quot;</span>,nwt.hour);<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;nwt.min = %d\r\n&quot;</span>,nwt.min);<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;nwt.sec = %d\r\n&quot;</span>,nwt.sec);<br> <span class="hljs-comment">//打印时分秒年月日数据</span><br>     <span class="hljs-comment">//parse_now_time();//Cjson方法解析时间数据</span><br><br>atk_8266_quit_trans();<span class="hljs-comment">//退出透传</span><br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CIPCLOSE&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">50</span>);         <span class="hljs-comment">//关闭连接</span><br>myfree(SRAMIN,p);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="实验现象"><a href="#实验现象" class="headerlink" title="实验现象"></a>实验现象</h2><p><img src="/img/c4f182e1/RSEhTJ.png" alt="微信配网实物图"></p><p><img src="/img/c4f182e1/RSE5k9.jpg" alt="综合调试串口"></p><p><img src="/img/c4f182e1/RSEIYR.jpg" alt="硬件实物图"></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>4.3寸和7寸屏需要比较大电流,USB供电可能不足,请用外部电源适配器(推荐外接12V 1A电源)。</li><li>本例程在LCD_Init函数里面(在ILI93xx.c),用到了printf,如果不初始化串口1,将导致液晶无法显示!! </li><li>字库更新时,需自备标准SD卡一张(即大卡,也可以用TF卡+卡套)，并拷贝光盘:SD卡根目录文件里面的所有内容到SD卡根目录,然后将SD卡插到开发板。</li><li>对于战舰V3开发板,P8需要用跳线短接:PB10(TX)与GBC_RX，PB11(RX)与GBC_TX。</li><li>如果触摸屏不准，请按住KEY0不放，然后按复位，松开复位，进入触摸屏校准。此时松开KEY0，执行校准，即可对屏幕进行校准。</li></ol>]]></content>
    
    
    <categories>
      
      <category>STM32</category>
      
    </categories>
    
    
    <tags>
      
      <tag>STM32</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于STM32的空气质量检测仪</title>
    <link href="/posts/f691db9d/"/>
    <url>/posts/f691db9d/</url>
    
    <content type="html"><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/Maskbugzero/STM32-GP2Y1010AU">Maskbugzero&#x2F;STM32-GP2Y1010AU</a></p><p>一个基于STM32的空气质量检测仪项目</p><h2 id="硬件资源"><a href="#硬件资源" class="headerlink" title="硬件资源"></a>硬件资源</h2><ol><li>战舰V3\精英STM32F103开发板</li><li>GP2Y1010AU气体检测模块</li></ol><h2 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h2><ul><li>室外粉尘颗粒数据获取及显示</li></ul><h2 id="连接方式"><a href="#连接方式" class="headerlink" title="连接方式"></a>连接方式</h2><p><img src="/img/f691db9d/RSYABj.png" alt="电路图"></p><p><img src="/img/f691db9d/RSYEHs.png" alt="连接方式"></p><h2 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-type">char</span> str[] = <span class="hljs-string">&quot;&quot;</span>;<br>u16 PM = <span class="hljs-number">0</span>; <br>DHT11_Data_TypeDef DHT11_Data;<br><br>delay_init();<br>NVIC_Configuration();<br>uart_init(<span class="hljs-number">115200</span>);<br>GP2Y_Adc_Init();  <span class="hljs-comment">//ADC初始化     </span><br>OLED_Init();<br>OLED_ColorTurn(<span class="hljs-number">0</span>);<span class="hljs-comment">//0正常显示，1 反色显示</span><br>OLED_DisplayTurn(<span class="hljs-number">0</span>);<span class="hljs-comment">//0正常显示 1 屏幕翻转显示</span><br><br>OLED_Refresh();<br>OLED_ShowString(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&quot;PM2.5:&quot;</span>,<span class="hljs-number">16</span>); <br>OLED_ShowString(<span class="hljs-number">12</span>,<span class="hljs-number">20</span>,<span class="hljs-string">&quot;TEM:&quot;</span>,<span class="hljs-number">16</span>); <br>OLED_ShowString(<span class="hljs-number">12</span>,<span class="hljs-number">38</span>,<span class="hljs-string">&quot;HUM:&quot;</span>,<span class="hljs-number">16</span>); <br><br>OLED_ShowString(<span class="hljs-number">90</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&quot;ug/m3&quot;</span>,<span class="hljs-number">12</span>); <span class="hljs-comment">//PM2.5单位 ug/m3</span><br>OLED_ShowChinese(<span class="hljs-number">100</span>,<span class="hljs-number">20</span>,<span class="hljs-number">0</span>,<span class="hljs-number">16</span>); <span class="hljs-comment">//温度单位 ℃</span><br>OLED_ShowChar(<span class="hljs-number">100</span>,<span class="hljs-number">38</span>,<span class="hljs-string">&#x27;%&#x27;</span>,<span class="hljs-number">16</span>);  <span class="hljs-comment">//湿度单位 %</span><br><br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-comment">/* 粉尘传感器获取数据*/</span><br>PM = GetGP2YSingleValue();       <span class="hljs-comment">//得到pm2.5值 </span><br><span class="hljs-keyword">if</span>(PM &lt; <span class="hljs-number">10</span>)<br><span class="hljs-built_in">sprintf</span>(str, <span class="hljs-string">&quot; %d &quot;</span>,PM);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(PM &lt; <span class="hljs-number">100</span>)<br><span class="hljs-built_in">sprintf</span>(str, <span class="hljs-string">&quot;%d &quot;</span>,PM);<br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">sprintf</span>(str, <span class="hljs-string">&quot;%d&quot;</span>,PM);<br>OLED_ShowString(<span class="hljs-number">60</span>,<span class="hljs-number">2</span>,(u8 *)str,<span class="hljs-number">16</span>);<br><br><span class="hljs-comment">/* 温湿度传感器获取数据*/</span><br><span class="hljs-keyword">if</span>( Read_DHT11(&amp;DHT11_Data)==SUCCESS)<br>&#123;<br><span class="hljs-built_in">sprintf</span>(str, <span class="hljs-string">&quot;%d.%d ℃ &quot;</span>,DHT11_Data.temp_int,DHT11_Data.temp_deci);<br>OLED_ShowString(<span class="hljs-number">60</span>,<span class="hljs-number">20</span>,(u8 *)str,<span class="hljs-number">16</span>);<br><span class="hljs-built_in">sprintf</span>(str, <span class="hljs-string">&quot;%d.%d&quot;</span>,DHT11_Data.humi_int,DHT11_Data.humi_deci);<br>OLED_ShowString(<span class="hljs-number">60</span>,<span class="hljs-number">38</span>,(u8 *)str,<span class="hljs-number">16</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Read DHT11 ERROR!\r\n&quot;</span>);<span class="hljs-comment">//读取数据失败，串口打印：Read DHT11 ERROR.</span><br>&#125;<br><br>OLED_Refresh();<br>delay_ms(<span class="hljs-number">1000</span>);<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="实验现象"><a href="#实验现象" class="headerlink" title="实验现象"></a>实验现象</h2><p><img src="/img/f691db9d/RSYZEn.png" alt="实物图"></p>]]></content>
    
    
    <categories>
      
      <category>STM32</category>
      
    </categories>
    
    
    <tags>
      
      <tag>STM32</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Netkeeper-OpenWrt——专注闪讯上网</title>
    <link href="/posts/500de237/"/>
    <url>/posts/500de237/</url>
    
    <content type="html"><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/Maskbugzero/Netkeeper-OpenWrt">Maskbugzero&#x2F;Netkeeper-OpenWrt</a></p><p>使用 GitHub Actions 云编译带有闪讯拨号插件（Netkeeper）的OpenWrt编译项目。</p><h2 id="固件下载"><a href="#固件下载" class="headerlink" title="固件下载"></a>固件下载</h2><p><a href="https://github.com/Maskbugzero/Netkeeper-OpenWrt/releases">Openwrt-x86-64</a></p><h3 id="文件说明"><a href="#文件说明" class="headerlink" title="文件说明"></a>文件说明</h3><table><thead><tr><th align="left">文件名</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">sha256sums</td><td align="left">固件完整性校验文件</td></tr><tr><td align="left">config.buildinfo</td><td align="left">OpenWrt 编译配置文件</td></tr><tr><td align="left">openwrt-x86-64-generic.manifest</td><td align="left">固件内已集成软件包列表</td></tr><tr><td align="left">openwrt-x86-64-generic-generic-rootfs.tar.gz</td><td align="left">RootFS 文件</td></tr><tr><td align="left">openwrt-x86-64-generic-rootfs-ext4.img.gz</td><td align="left">不带引导的 RootFS 镜像</td></tr><tr><td align="left"><strong>openwrt-x86-64-generic-squashfs-combined.vmdk</strong></td><td align="left"><strong>VMDK 虚拟磁盘映像 (Legacy 引导)</strong></td></tr><tr><td align="left"><strong>openwrt-x86-64-generic-squashfs-combined-efi.vmdk</strong></td><td align="left"><strong>VMDK 虚拟磁盘映像 (UEFI 引导)</strong></td></tr><tr><td align="left"><strong>openwrt-x86-64-generic-squashfs-combined.img.gz</strong></td><td align="left"><strong>Squashfs 格式安装 &#x2F; 升级固件 (Legacy 引导)</strong></td></tr><tr><td align="left"><strong>openwrt-x86-64-generic-squashfs-combined-efi.img.gz</strong></td><td align="left"><strong>Squashfs 格式安装 &#x2F; 升级固件 (UEFI 引导)</strong></td></tr></tbody></table><h2 id="登录页面"><a href="#登录页面" class="headerlink" title="登录页面"></a>登录页面</h2><ul><li>用户名：root 密码为空 管理IP：192.168.1.1</li></ul><h2 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h2><ol><li>Netkeeper插件使用说明</li><li>自动获取闪讯密码并填写</li></ol><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h4 id="初始配置"><a href="#初始配置" class="headerlink" title="初始配置"></a>初始配置</h4><ol><li><p>默认Lan管理IP为<code>192.168.1.1</code>，默认第一个网口为 LAN，第二个为 WAN</p><p><img src="/img/500de237/202108241449923.png" alt="登录页面"></p></li><li><p>直接登录，之后至系统 -&gt; 管理权 页面修改默认密码，点击保存应用后立即生效</p><p><img src="/img/500de237/202108241451530.png" alt="修改默认密码"></p></li></ol><h3 id="Netkeeper插件使用说明"><a href="#Netkeeper插件使用说明" class="headerlink" title="Netkeeper插件使用说明"></a>Netkeeper插件使用说明</h3><h4 id="普通插件"><a href="#普通插件" class="headerlink" title="普通插件"></a>普通插件</h4><p>在 网络 -&gt; 接口 -&gt; WAN编辑 -&gt; 选择闪讯拨号 -&gt; 确认切换 后</p><p><img src="/img/500de237/202108241455976.png" alt="切换为闪讯拨号"></p><p>然后输入 用户名 和 密码 选择对应的 闪讯插件 保存应用即可拨号</p><p><img src="/img/500de237/202108241455835.png" alt="选择对应的闪讯插件"></p><h4 id="拦截插件"><a href="#拦截插件" class="headerlink" title="拦截插件"></a>拦截插件</h4><p>在 网络 -&gt; 接口 -&gt; WAN编辑 -&gt; 选择闪讯拨号 -&gt; 确认切换 后</p><p>选择 闪讯拦截 插件并开启闪讯拦截服务后，在PC端使用闪讯客户端拨号，会自动获取用户名与密码并拨号</p><p>可以不用填写 用户名 和 密码</p><p>在 服务 -&gt; 闪讯拦截 开启闪讯拦截服务</p><p><img src="/img/500de237/202108241457718.png" alt="开启闪讯拦截服务"></p><h4 id="特别鸣谢"><a href="#特别鸣谢" class="headerlink" title="特别鸣谢"></a>特别鸣谢</h4><p>netkeeper的核心源码来自于miao1007的<a href="https://github.com/miao1007/Openwrt-NetKeeper">Openwrt-NetKeeper</a></p><p>编译使用的源码来自于CCnut的<a href="https://github.com/CCnut/feed-netkeeper">feed-netkeeper</a></p><h3 id="自动获取闪讯密码并填写"><a href="#自动获取闪讯密码并填写" class="headerlink" title="自动获取闪讯密码并填写"></a>自动获取闪讯密码并填写</h3><p>此功能须配合kuretru的<a href="https://github.com/kuretru/SingleNet-Robot">SingleNet-Robot</a>项目。由于本项目编译时以添加luci-mod-rpc，所以可直接使用推荐的LuCI服务端。</p><h4 id="简单使用方法："><a href="#简单使用方法：" class="headerlink" title="简单使用方法："></a>简单使用方法：</h4><ol><li>去<a href="https://github.com/kuretru/SingleNet-Robot/releases">项目</a>下载编译好的apk文件，并安装至手机</li><li>点击<strong>服务器配置</strong>，输入服务端地址’<a href="http://192.168.1.1/">http://192.168.1.1</a>‘ 及服务端网络接口名称’wan’</li><li>服务端类型选择<strong>Luci Rpc</strong>，配置路由用户名密码</li><li>点击<strong>测试服务器</strong>，若成功点击保存并退出，若失败请仔细检查服务端地址是否设置正确</li><li>在调试面板输入当前的闪讯账号及密码，并点击<strong>手动更新用户名及密码</strong>查看是否自动更新成功</li><li>点击<strong>注册定时任务</strong>以开启自动更新密码功能，无需此功能可不点击注册定时任务。若点击注册定时任务，可设置更新时间间隔。</li></ol><p><strong>PS</strong>：定制系统如MIUI等，需给予app足够的权限，其中设置sim卡时，若未给app <strong>获取手机信息</strong> 权限，将无法测试并造成闪退，且无法保存服务器数据。若未识别到收到的闪讯上网密码，则未给app <strong>读取通知类短信</strong> 权限。</p><p><strong>PS</strong>：建议使用较为廉价的备用机，关闭移动数据，打开WIFI开关，只用于更新闪讯密码，可实现无缝更新闪讯密码。</p><h4 id="特别鸣谢-1"><a href="#特别鸣谢-1" class="headerlink" title="特别鸣谢"></a>特别鸣谢</h4><p>kuretru的<a href="https://github.com/kuretru/SingleNet-Robot">SingleNet-Robot</a></p><h3 id="软路由写盘"><a href="#软路由写盘" class="headerlink" title="软路由写盘"></a>软路由写盘</h3><ol><li>将 img 文件上传</li><li>输入命令 <code>dd if=/tmp/op.img of=/dev/sda</code> 回车（op.img 为固件的名称）</li><li>最后输入 <code>reboot</code> 重启路由器</li></ol><h2 id="项目基于"><a href="#项目基于" class="headerlink" title="项目基于"></a>项目基于</h2><ul><li><a href="https://github.com/CCnut/feed-netkeeper">feed-netkeeper</a></li><li><a href="https://github.com/kuretru/SingleNet-Robot">SingleNet-Robot</a></li><li><a href="https://github.com/openwrt/openwrt">OpenWrt</a></li><li><a href="https://github.com/P3TERX/Actions-OpenWrt">P3TERX&#x2F;Actions-OpenWrt</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>OpenWrt</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OpenWrt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker常用命令</title>
    <link href="/posts/29dc6fe8/"/>
    <url>/posts/29dc6fe8/</url>
    
    <content type="html"><![CDATA[<h2 id="docker-基础命令"><a href="#docker-基础命令" class="headerlink" title="docker 基础命令"></a>docker 基础命令</h2><ul><li>启动docker</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start docker<br></code></pre></td></tr></table></figure><ul><li>关闭docker</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl stop docker<br></code></pre></td></tr></table></figure><ul><li>重启docker</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart docker<br></code></pre></td></tr></table></figure><ul><li>查看docker 运行状态 ——如果是在运行中 输入命令后 会看到绿色的active</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl status docker<br></code></pre></td></tr></table></figure><ul><li>查看docker 版本号信息</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker version<br></code></pre></td></tr></table></figure><ul><li>查看docker 详细信息 ——–此命令可以查看到docker 中容器运行个数 以及镜像个数等等</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker info<br></code></pre></td></tr></table></figure><ul><li>设置开机启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable docker<br></code></pre></td></tr></table></figure><ul><li>关闭开机启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl disable docker<br></code></pre></td></tr></table></figure><h2 id="docker-镜像命令"><a href="#docker-镜像命令" class="headerlink" title="docker 镜像命令"></a>docker 镜像命令</h2><ul><li>查看自己服务器中docker 镜像列表</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker images<br></code></pre></td></tr></table></figure><ul><li>拉取镜像 不加tag(版本号) 即拉取docker仓库中 该镜像的最新版本latest 加:tag 则是拉取指定版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull 镜像名 <br>docker pull 镜像名:tag<br></code></pre></td></tr></table></figure><ul><li>运行镜像</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run 镜像名<br></code></pre></td></tr></table></figure><ul><li>删除镜像 ——当前镜像没有被任何容器使用才可以删除</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker rm [containerID] 删除容器<br>docker rmi [imageID] 删除镜像<br></code></pre></td></tr></table></figure><h2 id="docker-容器命令"><a href="#docker-容器命令" class="headerlink" title="docker 容器命令"></a>docker 容器命令</h2><ul><li>查看运行中的所有容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker ps -a <br></code></pre></td></tr></table></figure><ul><li>查看正在运行容器列表</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker ps<br></code></pre></td></tr></table></figure><ul><li>停止容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker stop 容器名/容器ID<br></code></pre></td></tr></table></figure><ul><li>重启容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker restart 容器ID/容器名<br></code></pre></td></tr></table></figure><ul><li>启动容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker start 容器ID/容器名<br></code></pre></td></tr></table></figure><ul><li>kill 容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker kill 容器ID/容器名<br></code></pre></td></tr></table></figure><ul><li>进入容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it 容器名/容器ID /bin/bash<br>docker attach 容器名/容器ID<br></code></pre></td></tr></table></figure><ul><li>退出容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">-----直接退出  未添加-d(持久化运行容器)时执行此参数 容器会被关闭</span>  <br>exit<br><span class="hljs-meta prompt_"># </span><span class="language-bash">优雅退出 --- 无论是否添加-d参数执行此命令容器都不会被关闭</span><br>Ctrl + p + q<br></code></pre></td></tr></table></figure><h2 id="docker-网络命令"><a href="#docker-网络命令" class="headerlink" title="docker 网络命令"></a>docker 网络命令</h2><ul><li>列所有列表的网络</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker network  ls<br></code></pre></td></tr></table></figure><ul><li>创建macvlan网络</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">ifconfig # 查看网卡信息<br><br>docker network create -d macvlan \ # 创建macvlan网络，使用macvlan网络驱动<br>    --subnet=192.168.1.0/24 \      # 指定要桥接的网络地址<br>    --gateway=192.168.1.1 \        # 指定网关<br>    -o parent=eth0 \               # 设置要在宿主机上指定网卡<br>    bridge-host                    # 网络名称<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
      <category>Leaning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
